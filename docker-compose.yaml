services:
  pgweb:
    image: sosedoff/pgweb
    container_name: postgres-webview
    restart: unless-stopped
    links:
      - postgres:postgres
    depends_on:
      - postgres
    networks:
      - mwmnetwork
    ports:
      - 8081:8081
    healthcheck:
      test: nc -vz 127.0.0.1 8081
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      - PGUSER=${POSTGRES_USER}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    networks:
      - mwmnetwork
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready",
          "-U",
          "${POSTGRES_USER}",
          "-d",
          "${POSTGRES_DB}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  nestjs:
    build:
      context: .
      dockerfile: ./docker/${NODE_ENV}.Dockerfile
    # restart: unless-stopped
    env_file:
      - .env
    networks:
      - mwmnetwork
    expose:
      - ${NESTJS_PORT}
    ports:
      - ${NESTJS_PORT}:${NESTJS_PORT}
      # The following port is for prisma studio
      - 5555:5555
    depends_on:
      - postgres
    volumes:
      - ./src:/usr/src/app/src
      - ./prisma:/usr/src/app/prisma

volumes:
  postgres-data:

networks:
  mwmnetwork:
